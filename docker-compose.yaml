version: "3.9"

services:
  postgres:
    image: ankane/pgvector
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Graktong1$"
      POSTGRES_DB: "main"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: allinone.gsh@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Graktong123
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`admin.postgres.nxgn.space`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    networks:
      - backend
      - proxy

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: always
    volumes:
      - qdrant_data:/qdrant/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qdrant.rule=Host(`qdrant.nxgn.space`)"
      - "traefik.http.services.qdrant.loadbalancer.server.port=6333"
    networks:
      - backend
      - proxy

  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"              # remove in production if you donâ€™t want dashboard exposed
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard (http://localhost:8080)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy

volumes:
  pg_data:
  qdrant_data:

networks:
  backend:
  proxy:
